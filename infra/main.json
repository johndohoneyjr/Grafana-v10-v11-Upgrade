{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "16849205207666143883"
    }
  },
  "parameters": {
    "namePrefix": {
      "type": "string",
      "defaultValue": "graftest",
      "metadata": {
        "description": "Name prefix for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for all resources"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username for the AKS cluster"
      }
    },
    "sshPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH public key for AKS cluster access"
      }
    },
    "dnsPrefix": {
      "type": "string",
      "defaultValue": "[format('{0}-aks', parameters('namePrefix'))]",
      "metadata": {
        "description": "AKS cluster DNS prefix"
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.29.2",
      "metadata": {
        "description": "Kubernetes version for AKS cluster"
      }
    },
    "nodeCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Node count for the AKS cluster"
      }
    },
    "nodeVmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "VM size for AKS nodes"
      }
    },
    "resourceToken": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id, deployment().name)]",
      "metadata": {
        "description": "Resource token for unique naming"
      }
    }
  },
  "variables": {
    "aksClusterName": "[format('{0}-aks-{1}', parameters('namePrefix'), parameters('resourceToken'))]",
    "grafanaInstanceName": "[format('{0}-grafana-{1}', parameters('namePrefix'), parameters('resourceToken'))]",
    "monitorWorkspaceName": "[format('{0}-amw-{1}', parameters('namePrefix'), parameters('resourceToken'))]",
    "logAnalyticsWorkspaceName": "[format('{0}-law-{1}', parameters('namePrefix'), parameters('resourceToken'))]",
    "commonTags": {
      "environment": "test",
      "project": "grafana-upgrade-testing",
      "azd-env-name": "[parameters('namePrefix')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Monitor/accounts",
      "apiVersion": "2023-04-03",
      "name": "[variables('monitorWorkspaceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}-aks-identity-{1}', parameters('namePrefix'), parameters('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2024-02-01",
      "name": "[variables('aksClusterName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-aks-identity-{1}', parameters('namePrefix'), parameters('resourceToken'))))]": {}
        }
      },
      "properties": {
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": true,
        "nodeResourceGroup": "[format('{0}-nodes', resourceGroup().name)]",
        "agentPoolProfiles": [
          {
            "name": "systempool",
            "count": "[parameters('nodeCount')]",
            "vmSize": "[parameters('nodeVmSize')]",
            "osType": "Linux",
            "mode": "System",
            "enableAutoScaling": true,
            "minCount": 1,
            "maxCount": 5,
            "osDiskSizeGB": 128,
            "osDiskType": "Managed",
            "maxPods": 30
          }
        ],
        "linuxProfile": {
          "adminUsername": "[parameters('adminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[parameters('sshPublicKey')]"
              }
            ]
          }
        },
        "networkProfile": {
          "networkPlugin": "azure",
          "networkPolicy": "azure",
          "serviceCidr": "10.0.0.0/16",
          "dnsServiceIP": "10.0.0.10"
        },
        "addonProfiles": {
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            }
          }
        },
        "oidcIssuerProfile": {
          "enabled": true
        },
        "securityProfile": {
          "workloadIdentity": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-aks-identity-{1}', parameters('namePrefix'), parameters('resourceToken')))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Dashboard/grafana",
      "apiVersion": "2023-09-01",
      "name": "[variables('grafanaInstanceName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "Standard"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "zoneRedundancy": "Disabled",
        "grafanaIntegrations": {
          "azureMonitorWorkspaceIntegrations": [
            {
              "azureMonitorWorkspaceResourceId": "[resourceId('Microsoft.Monitor/accounts', variables('monitorWorkspaceName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Monitor/accounts', variables('monitorWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid('grafana-monitoring-reader', resourceGroup().id, resourceId('Microsoft.Dashboard/grafana', variables('grafanaInstanceName')))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
        "principalId": "[reference(resourceId('Microsoft.Dashboard/grafana', variables('grafanaInstanceName')), '2023-09-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Dashboard/grafana', variables('grafanaInstanceName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Monitor/accounts/{0}', variables('monitorWorkspaceName'))]",
      "name": "[guid('aks-monitoring-data-reader', resourceId('Microsoft.Monitor/accounts', variables('monitorWorkspaceName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-aks-identity-{1}', parameters('namePrefix'), parameters('resourceToken'))))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b0d8363b-8ddd-447d-831f-62ca05bff136')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-aks-identity-{1}', parameters('namePrefix'), parameters('resourceToken'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-aks-identity-{1}', parameters('namePrefix'), parameters('resourceToken')))]",
        "[resourceId('Microsoft.Monitor/accounts', variables('monitorWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/dataCollectionRules",
      "apiVersion": "2022-06-01",
      "name": "[format('{0}-prometheus-dcr-{1}', parameters('namePrefix'), parameters('resourceToken'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "kind": "Linux",
      "properties": {
        "dataSources": {
          "prometheusForwarder": [
            {
              "name": "PrometheusDataSource",
              "streams": [
                "Microsoft-PrometheusMetrics"
              ],
              "labelIncludeFilter": {}
            }
          ]
        },
        "destinations": {
          "monitoringAccounts": [
            {
              "accountResourceId": "[resourceId('Microsoft.Monitor/accounts', variables('monitorWorkspaceName'))]",
              "name": "MonitoringAccount1"
            }
          ]
        },
        "dataFlows": [
          {
            "streams": [
              "Microsoft-PrometheusMetrics"
            ],
            "destinations": [
              "MonitoringAccount1"
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Monitor/accounts', variables('monitorWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
      "apiVersion": "2022-06-01",
      "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', variables('aksClusterName'))]",
      "name": "[format('{0}-dcr-association-{1}', parameters('namePrefix'), parameters('resourceToken'))]",
      "properties": {
        "dataCollectionRuleId": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-prometheus-dcr-{1}', parameters('namePrefix'), parameters('resourceToken')))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterName'))]",
        "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-prometheus-dcr-{1}', parameters('namePrefix'), parameters('resourceToken')))]"
      ]
    }
  ],
  "outputs": {
    "aksClusterName": {
      "type": "string",
      "value": "[variables('aksClusterName')]"
    },
    "aksClusterResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterName'))]"
    },
    "grafanaInstanceName": {
      "type": "string",
      "value": "[variables('grafanaInstanceName')]"
    },
    "grafanaEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Dashboard/grafana', variables('grafanaInstanceName')), '2023-09-01').endpoint]"
    },
    "azureMonitorWorkspaceName": {
      "type": "string",
      "value": "[variables('monitorWorkspaceName')]"
    },
    "azureMonitorWorkspaceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Monitor/accounts', variables('monitorWorkspaceName'))]"
    },
    "prometheusQueryEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Monitor/accounts', variables('monitorWorkspaceName')), '2023-04-03').metrics.prometheusQueryEndpoint]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[variables('logAnalyticsWorkspaceName')]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "value": "[parameters('location')]"
    }
  }
}